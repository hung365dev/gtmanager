// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Racing;
using PixelCrushers.DialogueSystem;


public class RacingAIWithHeating : RacingAIBase
{
	
	public EngineTemperatureMonitor engineTempMonitor;
	
	public GameObject engineWhiteSmoke;
	public GameObject engineBlackSmoke;
	public GameObject engineFire;
	
	public EEngineFailureStage engineFailure;

	public RacingAIWithHeating ()
	{
	}

	public void initEngineTempMonitor() {
		
		engineTempMonitor = new EngineTemperatureMonitor();
		engineTempMonitor.initDriveTrainVals(this.aiDriveTrain,this.aiInput);
	}

	public void initSmokes() {
		try {
			if(engineWhiteSmoke==null&&this.gameObject.transform.FindChild("EngineWhiteSmoke")!=null) {
				engineWhiteSmoke = this.gameObject.transform.FindChild("EngineWhiteSmoke").gameObject;
			}
			if(engineBlackSmoke==null&&this.gameObject.transform.FindChild("EngineBlackSmoke")!=null) {
				engineBlackSmoke = this.gameObject.transform.FindChild("EngineBlackSmoke").gameObject;
			}
			if(engineFire==null&&this.gameObject.transform.FindChild("EngineFire")!=null) {
				engineFire = this.gameObject.transform.FindChild("EngineFire").gameObject;
			}
		} catch(Exception e) {
			
		}
		engineFailure = EEngineFailureStage.Normal;
		setEngineFailureStage(); 
	}

	public void setEngineFailureStage() {
		switch(engineFailure) {
		case(EEngineFailureStage.Normal):
			if(engineFire!=null)
				engineFire.gameObject.SetActive(false);	
			if(engineWhiteSmoke!=null)
				engineWhiteSmoke.gameObject.SetActive(false);	
			if(engineBlackSmoke!=null)
				engineBlackSmoke.gameObject.SetActive(false);	
			if(aiDriveTrain!=null) {
				if(!float.IsNaN(this.originalMaxRPM)&&(this.originalMaxRPM>0)) {
					this.aiDriveTrain.TurnOff();
				}
			}
			
			
			break;
		case(EEngineFailureStage.Hot):
			if(this.humanControl) {
				if(DialogueLua.GetVariable("HintArrowOverheating").AsInt==0) {
					if(TeamControl.REF.selectedCar==this) {
						
					} else {
						TeamControl.REF.changeCar();
					}
				}
				RaceManager.REF.doConversation("TutorialOverheating");
			}
			if(engineFire!=null)
				engineFire.gameObject.SetActive(false);	
			if(engineWhiteSmoke!=null)
				engineWhiteSmoke.gameObject.SetActive(true);	
			if(engineBlackSmoke!=null)
				engineBlackSmoke.gameObject.SetActive(false);	
			
			if(aiDriveTrain!=null) {
				//	this.aiDriveTrain.SetMaxPower(this.originalPower*0.95f);
				//	this.aiDriveTrain.SetMaxTorque(this.originalTorque*0.95f);
				//	this.aiDriveTrain.SetMaxRPM(this.originalMaxRPM);
			}
			
			break;
		case(EEngineFailureStage.VeryHot):
			if(this.humanControl) {
				if(DialogueLua.GetVariable("HintArrowOverheating").AsInt==0) {
					if(TeamControl.REF.selectedCar==this) {
						
					} else {
						TeamControl.REF.changeCar();
					}
				}
			}
			if(engineFire!=null)
				engineFire.gameObject.SetActive(false);	
			if(engineWhiteSmoke!=null)
				engineWhiteSmoke.gameObject.SetActive(true);	
			if(engineBlackSmoke!=null)
				engineBlackSmoke.gameObject.SetActive(true);
			break;
		case(EEngineFailureStage.Failed):
			if(engineFire!=null)
				engineFire.gameObject.SetActive(true);	
			if(engineWhiteSmoke!=null)
				engineWhiteSmoke.gameObject.SetActive(true);	
			if(engineBlackSmoke!=null)
				engineBlackSmoke.gameObject.SetActive(true);	
			
			if(aiDriveTrain!=null) {
				this.aiCar.EnableSpeedRestriction(0,int.MaxValue,true,5f);
			}
			
			break;
		}
	}


}


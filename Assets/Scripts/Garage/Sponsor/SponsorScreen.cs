// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using Database;
using GoogleFu;
using Teams;
using championship;

	public class SponsorScreen : MonoBehaviour
	{
	public UILabel companyTitle;
	public UILabel contractLength;
	public UILabel contractValue;
	public UILabel sponsorDescription;
	
	public UILabel sponsorInterest;
	public int showingSponsor = 0;
	public UI2DSprite companySprite;
	
	public SponsorInterestInfo sponsorInterestInfo;
	
	 
	 public ESponsorPosition currentPosition = ESponsorPosition.Bonnet;
		public SponsorScreen ()
		{
		 
		}

		private UILabel initLabel(string aSearch) {
		GameObject g = GameObject.Find(aSearch);
			if(g!=null) {
				return g.GetComponent<UILabel>();
			} 
		return null;
		}
		
		public void changePosition() {
			switch(currentPosition) {
				case(ESponsorPosition.Bonnet):
					currentPosition = ESponsorPosition.Back;
					break;
				case(ESponsorPosition.Back):
					currentPosition = ESponsorPosition.Roof;
					break;
				case(ESponsorPosition.Roof):
					currentPosition = ESponsorPosition.Left;
					break;
				case(ESponsorPosition.Left):
					currentPosition = ESponsorPosition.Right;
					break;
				case(ESponsorPosition.Right):
					currentPosition = ESponsorPosition.Bonnet;
					break;
			}
		}
		public void onAcceptOffer() {
			GTTeam myTeam = ChampionshipSeason.ACTIVE_SEASON.getUsersTeam();
		
			myTeam.addContract(this.currentPosition,myTeam.sponsorRelationship(SponsorDatabase.REF.sponsors[showingSponsor]),Convert.ToInt32(sponsorInterestInfo.sponsorValue),sponsorInterestInfo.contractLength);
			
			
			rePaintCars();
		}
		public void rePaintCars() {
			GameObject gls = GameObject.Find("GarageLeftSide");
			GameObject grs = GameObject.Find ("GarageRightSide");
			GarageCarManager gcm = gls.GetComponent<GarageCarManager>();
			GTTeam myTeam = ChampionshipSeason.ACTIVE_SEASON.getUsersTeam();
			myTeam.applySponsorsToCar(gcm.thisCarsGameObject);
			gcm = grs.GetComponent<GarageCarManager>();
			myTeam.applySponsorsToCar(gcm.thisCarsGameObject);
		}
	public void Start() {
			if(SponsorDatabase.REF!=null)
			showSponsor(SponsorDatabase.REF.sponsorByID(1));
		}
		public void initLabels() {
			UI2DSprite[] uis = this.GetComponentsInChildren<UI2DSprite>();
			for(int i = 0;i<uis.Length;i++) {
				if(uis[i].name=="LogoSprite") {
					this.companySprite = uis[i];
				}
			}
			companyTitle = initLabel("SponsorTitle");
			sponsorDescription = initLabel("SponsorDescription");
			contractLength = initLabel("ContractLengthValue");
			contractValue = initLabel("SponsorOfferValue");
			this.sponsorInterest = initLabel("InterestValue");
		}
		public void showNextSponsor() {
			showingSponsor++; 
			if(showingSponsor>=SponsorDatabase.REF.sponsors.Count) {
				showingSponsor = 0;
			}
			showSponsor(SponsorDatabase.REF.sponsors[showingSponsor]);
		
			
		}
		public void showPreviousSponsor() {
			showingSponsor--;
			if(showingSponsor<0){
				showingSponsor = SponsorDatabase.REF.sponsors.Count-1;
			}
			showSponsor(SponsorDatabase.REF.sponsors[showingSponsor]);
		}
	
		public void onCloseSponsorScreen() {
			InterfaceMainButtons.REF.onCloseOtherScreen();
		}
	
	public void showSponsor(SponsorRecord aSponsor) {
			if(companyTitle==null) {
				initLabels();
			} 
			showingSponsor = SponsorDatabase.REF.indexOfSponsor(aSponsor);
			companySprite.sprite2D = aSponsor.logo;
			companyTitle.text = aSponsor.name;
			
			GTTeam team = ChampionshipSeason.ACTIVE_SEASON.getUsersTeam();
			SponsorInterestInfo sii = team.interestFromSponsor(aSponsor);
			
			sponsorInterestInfo = sii;
			contractLength.text = ""+sii.contractLength+" Races";
			this.contractValue.text = ""+sii.sponsorValue;
			this.sponsorInterest.text = ""+sii.sponsorInterestString;
		}
	}



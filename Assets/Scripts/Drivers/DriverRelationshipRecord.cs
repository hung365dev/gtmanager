// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
namespace Drivers
{
	// ------------------------------------------------------------------------------
	//  <autogenerated>
	//      This code was generated by a tool.
	//      Mono Runtime Version: 4.0.30319.1
	// 
	//      Changes to this file may cause incorrect behavior and will be lost if 
	//      the code is regenerated.
	//  </autogenerated>
	// ------------------------------------------------------------------------------
	using System;
	using Database;
	
	public class DriverRelationshipRecord
	{
		public GTDriver record;
		public int currentRelationshipValue;
		public DriverRelationshipRecord (GTDriver aRecord,int aRelationshipValue)
		{
			init(aRecord,aRelationshipValue);
		}
		public void init(GTDriver aRecord,int aRelationshipValue)
		{
			record = aRecord;
			currentRelationshipValue = aRelationshipValue - record.demandingReputation;
		}
		public SponsorInterestInfo interest {
			get {
				if(currentRelationshipValue<-200) {
					return new SponsorInterestInfo("Not Interested",0f,0);
				}
				if(currentRelationshipValue<-100) {
					return new SponsorInterestInfo("Becoming Interested",0f,0);
				}
				if(currentRelationshipValue<-50) {
					if(currentRelationshipValue<-75)
						return new SponsorInterestInfo("Semi-Interested",record.contract.payPerRace*1.5f,4); else {
						return new SponsorInterestInfo("Semi-Interested",record.contract.payPerRace*1.5f,8);
					} 
				}	
				if(currentRelationshipValue<-25) {
					if(currentRelationshipValue<-50)
						return new SponsorInterestInfo("Semi-Interested",record.contract.payPerRace*1.25f,4); else {
						return new SponsorInterestInfo("Semi-Interested",record.contract.payPerRace*1.25f,8);
					}
				}

				return new SponsorInterestInfo("Interested",record.contract.payPerRace,8);
				
				
			}
		}
	}
	
	
}


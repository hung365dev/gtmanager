// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using championship;
using Teams;


namespace Drivers
{
	public class GTDriverWithContract : GTDriverBase
	{
		private DriverContract _contract;
		public GTDriverWithContract ()
		{
		}

		public DriverContract contract {
			get {
				if(_contract==null) {
					GTTeam teamForDriver = ChampionshipSeason.ACTIVE_SEASON.getTeamFromDriver((GTDriver) this);
					_contract = new DriverContract();
					_contract.team = teamForDriver;
					_contract.payPerRace = wantedPay;
					_contract.bonusPerRace = wantedBonus;
					if(teamForDriver==null) {
						_contract.remainingOnContract = 0;
					} else {
						_contract.remainingOnContract = 1;
					}
				}
				return _contract;
			}
			set {
				_contract = value;
			}
		}
		
		public int wantedPay {
			get {
				return Convert.ToInt32(this.demandingReputation*5);
			}
		}

		public int wantedBonus {
			get {
				if(this.demandingReputation<500) {
					return Convert.ToInt32(this.demandingReputation / 2);
				} else 
				if(this.demandingReputation<1000) {
					return Convert.ToInt32(this.demandingReputation / 1.5);
				} else 
				if(this.demandingReputation<2000) {
					return Convert.ToInt32(this.demandingReputation);
				} else if(this.demandingReputation<3000) {
					return Convert.ToInt32(this.demandingReputation*2);
				} else if(this.demandingReputation<5000) {
					return Convert.ToInt32(this.demandingReputation*4);
				}
				return this.demandingReputation*5;
			}
		}
	}
}

